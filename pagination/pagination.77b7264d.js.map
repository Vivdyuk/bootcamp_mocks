{"mappings":"AAAAA,QAAQC,IAAI,QACZ,MAQMC,EAAOC,SAASC,cAAc,UAG3BC,MAAM,8CACVC,MAAKC,IACJP,QAAQC,IAAIM,GAELA,EAASC,UAEjBC,OAAMC,IACLV,QAAQC,IAAIS,GACLA,EAAMC,WAqDhBL,MAhCmBM,IACpBZ,QAAQC,IAAIW,GAEZ,MAAMC,EAASC,MAAMC,QAAQH,GACzBA,EAAMI,KAAIC,GACV,0BACiBA,EAAKC,uCAAuCD,EAAKE,0BAEjEC,KAAK,IACN,MAAMR,QAEVV,EAAKmB,mBAAmB,YAAaR,MAuBvCX,EAAKoB,iBAAiB,SAAUC,IAnDb,IAACL,EAqDW,OAAzBK,EAAMC,OAAOC,UAGjBzB,QAAQ0B,IAAIH,EAAMC,QAClBxB,QAAQ0B,IAAIH,EAAMC,OAAOG,QAAQT,KAzDfA,EA2DPK,EAAMC,OAAOG,QAAQT,GAzDzBb,MAAM,qDAA2Ba,cACrCZ,MAAKC,IACJ,IAAKA,EAASqB,GACZ,MAAM,IAAIC,MAAM,6BAGlB,OAAOtB,EAASC,UAEjBC,OAAMC,IACLV,QAAQC,IAAIS,GACLA,EAAMC,YAgDdL,MAAKwB,IA7Be,EAACC,EAAeD,KACvC9B,QAAQC,IAAI6B,GAEZ,MAAMjB,EAASC,MAAMC,QAAQe,GACzBA,EAAMd,KAAIgB,GACV,gEAEwCA,EAAKC,0DACLD,EAAKE,qCAG5Cd,KAAK,IACN,MAAMU,QAEVC,EAAcV,mBAAmB,YAAaR,IAgB1CsB,CAAiBZ,EAAMC,OAAQM","sources":["src/pagination/pagination.js"],"sourcesContent":["console.log('here');\nconst BASE_URL = 'https://jsonplaceholder.typicode.com/';\n/**\n *  створити на початку список наших юзерів. (Нам буде достатньо просто імʼя)  endpoint = users\n *  По кліку під цим юзером ми захочемо побачити список постів, якій створив саме він endpoint = posts\n *  Якщо ми клікнули ще раз по нашому юзеру, то наші пости мають ховатись\\видалятись\n *\n */\n\nconst list = document.querySelector('.users');\n//-----------------------------------------------------------------------------------------------\nconst fetchUsers = () => {\n  return fetch(`${BASE_URL}users`)\n    .then(response => {\n      console.log(response);\n\n      return response.json();\n    })\n    .catch(error => {\n      console.log(error);\n      return error.message;\n    });\n};\n\nconst fetchPosts = (id) => {\n\n  return fetch(`${BASE_URL}posts?userId=${id}&_limit=3`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Sry cannot find any posts');\n      }\n\n      return response.json();\n    })\n    .catch(error => {\n      console.log(error);\n      return error.message;\n    });\n  ;\n};\n\nconst createMarkUp = (users) => {\n  console.log(users);\n\n  const markup = Array.isArray(users)\n    ? users.map(user => (\n      `\n        <li data-id=\"${user.id}\"><p style=\"pointer-events: none\">${user.name}</p></li>\n      `\n    )).join('')\n    : `<p>${users}</p>`;\n\n  list.insertAdjacentHTML('beforeend', markup);\n};\n\nconst createPostMarkup = (targetelement, posts) => {\n  console.log(posts);\n\n  const markup = Array.isArray(posts)\n    ? posts.map(post => (\n      `\n        <div>\n            <p style=\"pointer-events: none\">${post.title}</p>\n            <p style=\"pointer-events: none\">${post.body}</p>\n        </div>\n      `\n    )).join('')\n    : `<p>${posts}</p>`;\n\n  targetelement.insertAdjacentHTML('beforeend', markup);\n};\n\nfetchUsers()\n  .then(createMarkUp);\n\nlist.addEventListener('click', (event) => {\n\n  if (event.target.tagName !== 'LI') {\n    return;\n  }\n  console.dir(event.target);\n  console.dir(event.target.dataset.id);\n\n  fetchPosts(event.target.dataset.id)\n    .then(posts => {\n      createPostMarkup(event.target, posts);\n    });\n});\n\n\n"],"names":["console","log","$d4601e7ec96c157f$var$list","document","querySelector","fetch","then","response","json","catch","error","message","users","markup","Array","isArray","map","user","id","name","join","insertAdjacentHTML","addEventListener","event","target","tagName","dir","dataset","ok","Error","posts","targetelement","post","title","body","$d4601e7ec96c157f$var$createPostMarkup"],"version":3,"file":"pagination.77b7264d.js.map"}