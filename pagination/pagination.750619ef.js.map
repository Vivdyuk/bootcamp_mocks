{"mappings":"AAAAA,QAAQC,IAAI,QACZ,MAQMC,EAAOC,SAASC,cAAc,UAE9BC,EAAY,CAACC,EAAUC,KAC3B,MAAMC,EAAQD,EAASE,OAAOC,KAAKH,GAAQI,QAAO,CAACC,EAAKC,IAC/C,GAAGD,IAAMC,KAAON,EAAOM,OAC7B,KAAO,GAEV,OAAOC,MAAM,wCAAcR,IAAWE,KACnCO,MAAKC,IAGJ,GAFAhB,QAAQC,IAAIe,IAEPA,EAASC,GACZ,MAAM,IAAIC,MAAM,uBAAuBZ,KAEzC,OAAOU,EAASG,UAEjBC,OAAMC,IACLrB,QAAQC,IAAIoB,GACLA,EAAMC,YAoCnBjB,EAAU,SACPU,MAhCmBQ,IACpBvB,QAAQC,IAAIsB,GAEZ,MAAMC,EAASC,MAAMC,QAAQH,GACzBA,EAAMI,KAAIC,GACV,0BACiBA,EAAKC,uCAAuCD,EAAKE,0BAEjEC,KAAK,IACN,MAAMR,QAEVrB,EAAK8B,mBAAmB,YAAaR,MAuBvCtB,EAAK+B,iBAAiB,SAAUC,IAED,OAAzBA,EAAMC,OAAOC,UAGjBpC,QAAQqC,IAAIH,EAAMC,QAClBnC,QAAQqC,IAAIH,EAAMC,OAAOG,QAAQT,IAEjCxB,EAAU,QAAQ,CAChBkC,OAAQL,EAAMC,OAAOG,QAAQT,GAC7BW,OAAQ,IAEPzB,MAAK0B,IAhCe,EAACC,EAAeD,KACvCzC,QAAQC,IAAIwC,GAEZ,MAAMjB,EAASC,MAAMC,QAAQe,GACzBA,EAAMd,KAAIgB,GACV,gEAEwCA,EAAKC,0DACLD,EAAKE,qCAG5Cd,KAAK,IACN,MAAMU,QAEVC,EAAcV,mBAAmB,YAAaR,IAmB1CsB,CAAiBZ,EAAMC,OAAQM","sources":["src/pagination/pagination.js"],"sourcesContent":["console.log('here');\nconst BASE_URL = 'https://jsonplaceholder.typicode.com/';\n/**\n *  створити на початку список наших юзерів. (Нам буде достатньо просто імʼя)  endpoint = users\n *  По кліку під цим юзером ми захочемо побачити список постів, якій створив саме він endpoint = posts\n *  Якщо ми клікнули ще раз по нашому юзеру, то наші пости мають ховатись\\видалятись\n *\n */\n\nconst list = document.querySelector('.users');\n//-----------------------------------------------------------------------------------------------\nconst fetchData = (endpoint, params /*обʼєкт*/) => {\n  const query = params ? Object.keys(params).reduce((acc, key) => {\n    return `${acc}${key}=${params[key]}&`\n  }, '?') : '';\n\n  return fetch(`${BASE_URL}${endpoint}${query}`)\n    .then(response => {\n      console.log(response);\n\n      if (!response.ok) {\n        throw new Error(`Sry cannot find any ${endpoint}`);\n      }\n      return response.json();\n    })\n    .catch(error => {\n      console.log(error);\n      return error.message;\n    });\n};\n\n\nconst createMarkUp = (users) => {\n  console.log(users);\n\n  const markup = Array.isArray(users)\n    ? users.map(user => (\n      `\n        <li data-id=\"${user.id}\"><p style=\"pointer-events: none\">${user.name}</p></li>\n      `\n    )).join('')\n    : `<p>${users}</p>`;\n\n  list.insertAdjacentHTML('beforeend', markup);\n};\n\nconst createPostMarkup = (targetelement, posts) => {\n  console.log(posts);\n\n  const markup = Array.isArray(posts)\n    ? posts.map(post => (\n      `\n        <div>\n            <p style=\"pointer-events: none\">${post.title}</p>\n            <p style=\"pointer-events: none\">${post.body}</p>\n        </div>\n      `\n    )).join('')\n    : `<p>${posts}</p>`;\n\n  targetelement.insertAdjacentHTML('beforeend', markup);\n};\n\nfetchData('users')\n  .then(createMarkUp);\n\nlist.addEventListener('click', (event) => {\n\n  if (event.target.tagName !== 'LI') {\n    return;\n  }\n  console.dir(event.target);\n  console.dir(event.target.dataset.id);\n\n  fetchData('posts',{\n    userId: event.target.dataset.id,\n    _limit: 3,\n  })\n    .then(posts => {\n      createPostMarkup(event.target, posts);\n    });\n});\n\n\n"],"names":["console","log","$d4601e7ec96c157f$var$list","document","querySelector","$d4601e7ec96c157f$var$fetchData","endpoint","params","query","Object","keys","reduce","acc","key","fetch","then","response","ok","Error","json","catch","error","message","users","markup","Array","isArray","map","user","id","name","join","insertAdjacentHTML","addEventListener","event","target","tagName","dir","dataset","userId","_limit","posts","targetelement","post","title","body","$d4601e7ec96c157f$var$createPostMarkup"],"version":3,"file":"pagination.750619ef.js.map"}