{"mappings":"AAAAA,QAAQC,IAAI,QACZ,MAQMC,EAAOC,SAASC,cAAc,UAE9BC,EAAY,CAACC,EAAUC,KAC3B,MAAMC,EAAQD,EAASE,OAAOC,KAAKH,GAAQI,QAAO,CAACC,EAAKC,IAC/C,GAAGD,IAAMC,KAAON,EAAOM,OAC7B,KAAO,GAEV,OAAOC,MAAM,wCAAcR,IAAWE,KACnCO,MAAKC,IAGJ,GAFAhB,QAAQC,IAAIe,IAEPA,EAASC,GACZ,MAAM,IAAIC,MAAM,uBAAuBZ,KAEzC,OAAOU,EAASG,UAEjBC,OAAMC,IACLrB,QAAQC,IAAIoB,GACLA,EAAMC,YAObC,EAAe,CAACC,EAAQC,EAAUnB,KACtC,MAgBMoB,EAASC,MAAMC,QAAQH,GACzBA,EAASI,IAjBa,CACxBC,MAAQC,GACN,0BACiBA,EAAKC,uCAAuCD,EAAKE,wBAGpEC,MAAQC,GACN,gEAEwCA,EAAKC,0DACLD,EAAKE,oCAOd/B,IAAWgC,KAAK,IAC/C,MAAMb,QAEVD,EAAOe,mBAAmB,YAAab,IAKzCrB,EAAU,SACPU,MAAMyB,GAASjB,EAAarB,EAAMsC,EAAM,WAE3CtC,EAAKuC,iBAAiB,SAAUC,IAED,OAAzBA,EAAMlB,OAAOmB,SAIjBtC,EAAU,QAAS,CACjBuC,OAAQF,EAAMlB,OAAOqB,QAAQb,GAC7Bc,OAAQ,IAEP/B,MAAKmB,IACJX,EAAamB,EAAMlB,OAAQU,EAAO","sources":["src/pagination/pagination.js"],"sourcesContent":["console.log('here');\nconst BASE_URL = 'https://jsonplaceholder.typicode.com/';\n/**\n *  створити на початку список наших юзерів. (Нам буде достатньо просто імʼя)  endpoint = users\n *  По кліку під цим юзером ми захочемо побачити список постів, якій створив саме він endpoint = posts\n *  Якщо ми клікнули ще раз по нашому юзеру, то наші пости мають ховатись\\видалятись\n *\n */\n\nconst list = document.querySelector('.users');\n//-----------------------------------------------------------------------------------------------\nconst fetchData = (endpoint, params /*обʼєкт*/) => {\n  const query = params ? Object.keys(params).reduce((acc, key) => {\n    return `${acc}${key}=${params[key]}&`;\n  }, '?') : '';\n\n  return fetch(`${BASE_URL}${endpoint}${query}`)\n    .then(response => {\n      console.log(response);\n\n      if (!response.ok) {\n        throw new Error(`Sry cannot find any ${endpoint}`);\n      }\n      return response.json();\n    })\n    .catch(error => {\n      console.log(error);\n      return error.message;\n    });\n};\n//-----------------------------------------------------------------------------------------------\n\n\n\nconst createMarkup = (target, elements, endpoint) => {\n  const possibleCallbacks = {\n    users: (user) => (\n      `\n        <li data-id=\"${user.id}\"><p style=\"pointer-events: none\">${user.name}</p></li>\n      `\n    ),\n    posts: (post) => (\n      `\n        <div>\n            <p style=\"pointer-events: none\">${post.title}</p>\n            <p style=\"pointer-events: none\">${post.body}</p>\n        </div>\n      `\n    ),\n  };\n\n  const result = Array.isArray(elements)\n    ? elements.map(possibleCallbacks[endpoint]).join('')\n    : `<p>${elements}</p>`;\n\n  target.insertAdjacentHTML('beforeend', result);\n};\n//-----------------------------------------------------------------------------------------------\n\n\nfetchData('users')\n  .then((data) => createMarkup(list, data, 'users'));\n\nlist.addEventListener('click', (event) => {\n\n  if (event.target.tagName !== 'LI') {\n    return;\n  }\n\n  fetchData('posts', {\n    userId: event.target.dataset.id,\n    _limit: 3,\n  })\n    .then(posts => {\n      createMarkup(event.target, posts, 'posts');\n    });\n});\n\n\n"],"names":["console","log","$d4601e7ec96c157f$var$list","document","querySelector","$d4601e7ec96c157f$var$fetchData","endpoint","params","query","Object","keys","reduce","acc","key","fetch","then","response","ok","Error","json","catch","error","message","$d4601e7ec96c157f$var$createMarkup","target","elements","result","Array","isArray","map","users","user","id","name","posts","post","title","body","join","insertAdjacentHTML","data","addEventListener","event","tagName","userId","dataset","_limit"],"version":3,"file":"pagination.1a855ad3.js.map"}