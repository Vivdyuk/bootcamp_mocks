{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEAC,QAAQC,IAAIH,EAAAI,Q,IAGPC,GAAW,EAAXC,GAAW,EAAXC,OAAWC,E,IAAhB,QAAKC,EAAAC,EAAeV,EAAAI,OAAMO,OAAAC,cAArBP,GAAAI,EAAAC,EAAWG,QAAAC,MAAXT,GAAW,GAAX,IAAMU,EAANN,EAAWO,MACRD,EAAME,OAAS,GAAM,GACrBf,QAAQC,IAAIY,I,SAFfT,GAAW,EAAXC,EAAWW,E,YAAXb,GAAW,MAAXK,EAAWS,QAAXT,EAAWS,S,WAAXb,E,MAAAC,GAML,IAAK,IAAIa,EAAI,EAAGA,EAAIpB,EAAAI,OAAOa,OAAQG,GAAK,EAAG,CACvC,IAAMC,EAAQrB,EAAAI,OAAOgB,GACjBA,EAAI,GAAM,GACVlB,QAAQC,IAAIkB,GAKpBrB,EAAAI,OAAOkB,SAAQ,SAACC,EAAOC,GACnBtB,QAAQC,IAAIoB,MAahBrB,QAAQC,IAVR,SAAoBsB,EAAKC,GAErB,IADA,IAAMC,EAAS,GACNC,EAAIH,EAAKG,EAAIF,EAAKE,IACvBD,EAAOE,KAAKD,GAIhB,OAAOD,EAGCG,CAAU,EAAG,I","sources":["src/loops/loops.js"],"sourcesContent":["import { fruits } from '../variables.js';\n\nconsole.log(fruits);\n\n     debugger;   // 0, 1, 2, 3, 4 ...  fruits.length\nfor (const fruit of fruits) {\n    if (fruit.length % 2 === 0) {\n        console.log(fruit);\n    }\n}\n\nfor (let i = 0; i < fruits.length; i += 1) {\n    const fruit = fruits[i];\n    if (i % 2 === 0) {\n        console.log(fruit);\n    }\n}\n\n\nfruits.forEach((fruit, i) => {\n    console.log(fruit);\n})\n\nfunction fillArray (min, max) {\n    const result = [];\n    for (let i = min; i < max; i++) {\n        result.push(i);\n    }\n\n\n    return result;\n}\n\nconsole.log(fillArray(1, 3));"],"names":["$aZ4KJ","parcelRequire","console","log","fruits","$c921ae7c79799901$var$_iteratorNormalCompletion","$c921ae7c79799901$var$_didIteratorError","$c921ae7c79799901$var$_iteratorError","undefined","$c921ae7c79799901$var$_step","$c921ae7c79799901$var$_iterator","Symbol","iterator","next","done","$c921ae7c79799901$var$fruit","value","length","err","return","$c921ae7c79799901$var$i","$c921ae7c79799901$var$fruit1","forEach","fruit","i","min","max","result","i1","push","$c921ae7c79799901$var$fillArray"],"version":3,"file":"loops.54c23575.js.map"}